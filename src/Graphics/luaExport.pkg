
$#include <Graphics/GraphicsSystem.h>

namespace Core
{

	class GraphicsSystem
	{
		void begin();
		void present();

		bool initVertexShader(const char* shaderFile);
		bool initPixelShader(const char* shaderFile);
		
		Vec2 getTextureDimensions(uint32_t texID);
		void setBackgroundColor(float red, float green, float blue);

		void drawLine(const Transform& transform, const Vec2* positions, uint32_t count, const Color& lineColor);
		void drawPolygon(const Transform& transform, const Vec2* positions, uint32_t count, const Color& fillColor);
		void drawQuad(const Transform& transform, const Vec2& halfSize, const Color& fillColor);
		void drawTexturedQuad(const Transform& transform, const Color& fillColor, const Image& image, uint32_t textureID);

		//justification is 0 for left, 1 for center, 2 for right, all other values are treated as 0
		void drawText(const std::string& text, const Transform& transform, const Color& tint, uint32_t justification, bool isItalic);
	};
}